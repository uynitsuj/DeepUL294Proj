Training from scratch
Epoch 0
  0%|                                                                                                                                                                                                      | 0/4427 [00:00<?, ?it/s]/home/yujustin/anaconda3/envs/fov/lib/python3.11/site-packages/torch/functional.py:507: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3549.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/home/yujustin/SSD/DeepUL294Proj/DUL294P/foveation/foveate_image.py:66: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.result = torch.tensor(image).flatten(end_dim=-2)[self.sample_mask_idx,:]
> /home/yujustin/SSD/DeepUL294Proj/DUL294P/train_gen.py(135)train_one_epoch()
->
tensor([144335, 145555, 159099,  ...,  82088, 123429,  50627])
  0%|                                                                                                                                                                                                      | 0/4427 [03:07<?, ?it/s]
Traceback (most recent call last):
  File "/home/yujustin/SSD/DeepUL294Proj/DUL294P/train_gen.py", line 151, in <module>
    except KeyboardInterrupt:
    ^^^^^^
  File "/home/yujustin/SSD/DeepUL294Proj/DUL294P/train_gen.py", line 142, in main
  File "/home/yujustin/SSD/DeepUL294Proj/DUL294P/train_gen.py", line 135, in train_one_epoch
    y = torch.linspace(0, w - 1, w)
    ^^^^^
  File "/home/yujustin/anaconda3/envs/fov/lib/python3.11/bdb.py", line 90, in trace_dispatch
    return self.dispatch_line(frame)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yujustin/anaconda3/envs/fov/lib/python3.11/bdb.py", line 115, in dispatch_line
    if self.quitting: raise BdbQuit
                      ^^^^^^^^^^^^^
bdb.BdbQuit